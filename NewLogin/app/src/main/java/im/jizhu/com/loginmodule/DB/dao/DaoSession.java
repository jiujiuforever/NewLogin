package im.jizhu.com.loginmodule.DB.dao;

import android.database.sqlite.SQLiteDatabase;

import im.jizhu.com.loginmodule.DB.entity.AppEntity;
import im.jizhu.com.loginmodule.DB.entity.CollectionEntity;
import im.jizhu.com.loginmodule.DB.entity.DepartmentEntity;
import im.jizhu.com.loginmodule.DB.entity.GroupEntity;
import im.jizhu.com.loginmodule.DB.entity.MessageEntity;
import im.jizhu.com.loginmodule.DB.entity.ScheduleEntity;
import im.jizhu.com.loginmodule.DB.entity.SessionEntity;
import im.jizhu.com.loginmodule.DB.entity.UserEntity;
import im.jizhu.com.loginmodule.DB.entity.UserStatusEntity;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig departmentDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig groupDaoConfig;
    private final DaoConfig messageDaoConfig;
    private final DaoConfig sessionDaoConfig;
    private final DaoConfig userStatusInfoDaoConfig;
    private final DaoConfig collectionInfoDaoConfig;
    private final DaoConfig scheduleDaoConfig;
    private final DaoConfig appDaoConfig;


    private final DepartmentDao departmentDao;
    private final UserDao userDao;
    private final GroupDao groupDao;
    private final MessageDao messageDao;
    private final SessionDao sessionDao;
    private final UserStatusInfoDao userStatusInfoDao;
    private final CollectionInfoDao collectionInfoDao;
    private final ScheduleDao scheduleDao;
    private final AppDao appDao;
    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        departmentDaoConfig = daoConfigMap.get(DepartmentDao.class).clone();
        departmentDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        sessionDaoConfig = daoConfigMap.get(SessionDao.class).clone();
        sessionDaoConfig.initIdentityScope(type);

        userStatusInfoDaoConfig = daoConfigMap.get(UserStatusInfoDao.class).clone();
        userStatusInfoDaoConfig.initIdentityScope(type);

        collectionInfoDaoConfig = daoConfigMap.get(CollectionInfoDao.class).clone();
        collectionInfoDaoConfig.initIdentityScope(type);

        scheduleDaoConfig = daoConfigMap.get(ScheduleDao.class).clone();
        scheduleDaoConfig.initIdentityScope(type);

        appDaoConfig = daoConfigMap.get(AppDao.class).clone();
        appDaoConfig.initIdentityScope(type);



        departmentDao = new DepartmentDao(departmentDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);
        messageDao = new MessageDao(messageDaoConfig, this);
        sessionDao = new SessionDao(sessionDaoConfig, this);
        userStatusInfoDao = new UserStatusInfoDao(userStatusInfoDaoConfig,this);
        collectionInfoDao = new CollectionInfoDao(collectionInfoDaoConfig, this);
        scheduleDao = new ScheduleDao(scheduleDaoConfig, this);
        appDao = new AppDao(appDaoConfig, this);


        registerDao(DepartmentEntity.class, departmentDao);
        registerDao(UserEntity.class, userDao);
        registerDao(GroupEntity.class, groupDao);
        registerDao(MessageEntity.class, messageDao);
        registerDao(SessionEntity.class, sessionDao);
        registerDao(UserStatusEntity.class,userStatusInfoDao);
        registerDao(CollectionEntity.class, collectionInfoDao);
        registerDao(ScheduleEntity.class, scheduleDao);
        registerDao(AppEntity.class, appDao);

    }

    public void clear() {
        departmentDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        groupDaoConfig.getIdentityScope().clear();
        messageDaoConfig.getIdentityScope().clear();
        sessionDaoConfig.getIdentityScope().clear();
        userStatusInfoDaoConfig.getIdentityScope().clear();
        collectionInfoDaoConfig.getIdentityScope().clear();
        scheduleDaoConfig.getIdentityScope().clear();
        appDaoConfig.getIdentityScope().clear();
    }

    public DepartmentDao getDepartmentDao() {
        return departmentDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }


    public GroupDao getGroupDao() {
        return groupDao;
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public SessionDao getSessionDao() {
        return sessionDao;
    }


    public UserStatusInfoDao getUserStatusInfoDao(){
        return userStatusInfoDao;
    }
    public CollectionInfoDao getCollectionInfoDao() {
        return collectionInfoDao;
    }
    public ScheduleDao getScheduleDao() {
        return scheduleDao;
    }
    public AppDao getAppDao() {
        return appDao;
    }
}
