package im.jizhu.com.loginmodule.DB.dao;

import android.database.sqlite.SQLiteDatabase;

import im.jizhu.com.loginmodule.DB.entity.AccountEntity;
import im.jizhu.com.loginmodule.DB.entity.AttachEntity;
import im.jizhu.com.loginmodule.DB.entity.DepartEntity;
import im.jizhu.com.loginmodule.DB.entity.StatusEntity;
import im.jizhu.com.loginmodule.DB.entity.UserInfoEntity;
import im.jizhu.com.loginmodule.DB.entity.UserKeyEntity;
import im.jizhu.com.loginmodule.DB.entity.UserNameEntity;
import im.jizhu.com.loginmodule.DB.entity.UserValueEntity;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig attachDaoConfig;
    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig userKeyDaoConfig;
    private final DaoConfig userValueDaoConfig;
    private final DaoConfig userNameDaoConfig;
    private final DaoConfig departDaoConfig;
    private final DaoConfig accountDaoConfig;
    private final DaoConfig statusDaoConfig;

    private final AttachDao attachDao;
    private final UserInfoDao userInfoDao;
    private final UserKeyDao userKeyDao;
    private final UserValueDao userValueDao;
    private final UserNameDao userNameDao;
    private final DepartDao departDao;
    private final AccountDao accountDao;
    private final StatusDao statusDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        attachDaoConfig = daoConfigMap.get(AttachDao.class).clone();
        attachDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        userKeyDaoConfig = daoConfigMap.get(UserKeyDao.class).clone();
        userKeyDaoConfig.initIdentityScope(type);

        userValueDaoConfig = daoConfigMap.get(UserValueDao.class).clone();
        userValueDaoConfig.initIdentityScope(type);

        userNameDaoConfig = daoConfigMap.get(UserNameDao.class).clone();
        userNameDaoConfig.initIdentityScope(type);

        departDaoConfig = daoConfigMap.get(DepartDao.class).clone();
        departDaoConfig.initIdentityScope(type);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        statusDaoConfig = daoConfigMap.get(StatusDao.class).clone();
        statusDaoConfig.initIdentityScope(type);

        attachDao = new AttachDao(attachDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        userKeyDao = new UserKeyDao(userKeyDaoConfig, this);
        userValueDao = new UserValueDao(userValueDaoConfig, this);
        userNameDao = new UserNameDao(userNameDaoConfig, this);
        departDao = new DepartDao(departDaoConfig, this);
        accountDao = new AccountDao(accountDaoConfig, this);
        statusDao = new StatusDao(statusDaoConfig, this);

        registerDao(AttachEntity.class, attachDao);
        registerDao(UserInfoEntity.class, userInfoDao);
        registerDao(UserKeyEntity.class, userKeyDao);
        registerDao(UserValueEntity.class, userValueDao);
        registerDao(UserNameEntity.class, userNameDao);
        registerDao(DepartEntity.class, departDao);
        registerDao(AccountEntity.class, accountDao);
        registerDao(StatusEntity.class, statusDao);
    }
    
    public void clear() {
        attachDaoConfig.getIdentityScope().clear();
        userInfoDaoConfig.getIdentityScope().clear();
        userKeyDaoConfig.getIdentityScope().clear();
        userValueDaoConfig.getIdentityScope().clear();
        userNameDaoConfig.getIdentityScope().clear();
        departDaoConfig.getIdentityScope().clear();
        accountDaoConfig.getIdentityScope().clear();
        statusDaoConfig.getIdentityScope().clear();
    }

    public AttachDao getAttachDao() {
        return attachDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public UserKeyDao getUserKeyDao() {
        return userKeyDao;
    }

    public UserValueDao getUserValueDao() {
        return userValueDao;
    }

    public UserNameDao getUserNameDao() {
        return userNameDao;
    }

    public DepartDao getDepartDao() {
        return departDao;
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public StatusDao getStatusDao() {
        return statusDao;
    }

}
